name: run self-tests on Windows

on:
  # Runs on pushes targeting the default branch
  push:
    branches-ignore:
      - master
      - main
  #   branches: ['develop']
#  pull_request:
#    branches: ['main']

  workflow_dispatch:    # Allows running this workflow manually


# Default to bash
#defaults:
#  run:
#    shell: bash

jobs:
  test-G2:
    strategy:
      fail-fast: false
      matrix:
#        python-version: ["3.11", "3.12", "3.13"]
        python-version: ["3.13"]
    runs-on: 'windows-latest'
    steps:
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Conda info
        shell: bash -el {0}
        run: conda info
      - name: Conda list
        shell: pwsh
        run: conda list


      #   #uses: conda-incubator/setup-miniconda@030178870c779d9e5e1b4e563269f3aa69b04081 # v3.0.3 using hash for security
      #   with:
      #     #activate-environment: build
      #     miniforge-version: latest
      #     auto-activate-base: true
      #     #python-version: ${{ matrix.python-version }}
      #     #channels: conda-forge
          
      # - name: config python
      #   run: |
      #     # tailor the numpy version to match the GSAS-II binaries 
      #     if [ "${{ matrix.env }}" == "py313" ]; then
      #       npver=2.2
      #     elif [ "${{ matrix.env }}" == "py312" ]; then
      #       npver=2.2
      #     elif [ "${{ matrix.env }}" == "py311" ]; then
      #       npver=1.26
      #     fi
      #     conda list
      #     conda info
      #     #conda create build python=${{ matrix.python-version }} numpy={$npver} scipy requests pytest
