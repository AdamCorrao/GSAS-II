name: install self-installer on Windows

on:
  workflow_dispatch:    # Allows running this workflow manually
  # Runs on pushes targeting the default branch
  push:
    branches-ignore:
      - master
  #   branches: ['main']
#  pull_request:
#    branches: ['main']


jobs:
  test-GSAS-II:
    #strategy:
    #  fail-fast: false
    runs-on: 'windows-latest'
    steps:
      - uses: conda-incubator/setup-miniconda@v3
        with:
	  installer-url: https://github.com/AdvancedPhotonSource/GSAS-II-buildtools/releases/download/v1.0.1/gsas2full-Latest-Windows-x86_64.exe
#      - name: find files
#        shell: bash -el {0}
#        run: |
#          ls -l 

      # - name: GSAS-II single test
      #   if: always()
      #   shell: bash -el {0}
      #   run: |
      #     cd GSAS-II
      #     python tests/test_elm.py
      #     python tests/test_spg.py

      # - name: GSAS-II all tests
      #   if: always()
      #   shell: bash -el {0}
      #   run: |
      #     cd GSAS-II
      #     ls
      #     python -m pytest

      # - name: try pyspg
      #   if: always()
      #   shell: bash -el {0}
      #   run: |
      #     cd GSAS-II/GSASII-bin/win_64_p3.11_n1.26
      #     #cd GSAS-II/GSASII-bin/win_64_p3.12_n2.2
      #     python -VV
      #     #python -v -c "import sys; print(sys.path)"
      #     python -c "import pyspg"

      # - name: try ldd
      #   if: always()
      #   shell: bash -el {0}
      #   run: |
      #     #conda create -n ntldd python=3.12 numpy=2.2 m2w64-ntldd-git
      #     conda create -n ntldd python=3.11 numpy=1.26 m2w64-ntldd-git
      #     conda activate ntldd
      #     cd GSAS-II/GSASII-bin/win_64_p3.11_n1.26
      #     #cd GSAS-II/GSASII-bin/win_64_p3.12_n2.2
      #     ls
      #     ntldd *.pyd
      #     python -c "import pyspg"
